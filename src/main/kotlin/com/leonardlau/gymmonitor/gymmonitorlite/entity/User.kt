package com.leonardlau.gymmonitor.gymmonitorlite.entity

import jakarta.persistence.*
import java.time.Instant
import java.time.LocalDate

/**
 * Represents a user account, which can be either a member or a staff account.
 *
 * @property id Unique identifier for the user.
 * @property club The club the user belongs to.
 * @property membershipPlan The user’s current membership plan (nullable for staff).
 * @property name Full name of the user.
 * @property role The role of the user (“MEMBER” or “STAFF”).
 * @property email Email address for login.
 * @property passwordHash Hashed password for authentication.
 * @property dateJoined When the user joined the club.
 * @property centsOwed Amount the users owes their club in cents.
 * @property nextBillingDate Date when user will next be billed for their membership.
 */
@Entity
@Table(name = "users")
data class User(
    // Primary key. Value is automatically generated by the database.
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    val id: Int = 0,

    // Foreign key reference to the Club entity. Represents the club associated with this user.
    // For members, it indicates the club they are signed up to.
    // For staff, it indicates the club they work for.
    @ManyToOne
    @JoinColumn(name = "club_id", nullable = false)
    val club: Club,

    // Foreign key reference to the MembershipPlan entity. 
    // Represents which membership plan this user is signed up for.
    @ManyToOne
    @JoinColumn(name = "membership_plan_id")
    val membershipPlan: MembershipPlan? = null,  // nullable for staff

    @Column(nullable = false)
    val name: String,

    @Column(nullable = false)
    val role: String,  // e.g. "MEMBER" or "STAFF" (NOTE: would work better as an enum)

    @Column(nullable = false, unique = true)
    val email: String,

    @Column(name = "password_hash", nullable = false)
    val passwordHash: String,

    @Column(name = "date_joined", nullable = false)
    val dateJoined: Instant = Instant.now(), // Automatically assigns the current date

    @Column(name = "cents_owed", nullable = false)
    val centsOwed: Int = 0, // Defaults to 0

    @Column(name = "next_billing_date")
    var nextBillingDate: LocalDate? = null // Required for members, nullable for staff
)